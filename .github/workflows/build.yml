name: Build

on:
  release:
    types: [created]
  # Manual run
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}

    env:
      CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
      CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
      CIBW_ARCHS: "auto64"
      CIBW_BEFORE_ALL_LINUX: bash ci/prepare_for_build_linux.sh
      CIBW_BEFORE_ALL_MACOS: bash ci/prepare_for_build_macos.sh
      CIBW_BEFORE_ALL_WINDOWS: C:\msys64\msys2_shell.cmd -mingw64 -defterm -here -full-path -no-start -shell bash ci/prepare_for_build_win.sh
      CIBW_TEST_REQUIRES: nose
      CIBW_TEST_COMMAND: python {project}/ci/run_tests.py

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest]
        python: [38, 39]
        manylinux_image: [manylinux2014]
        include:
          - os: ubuntu-latest
            platform_id: manylinux_x86_64
          - os: macos-latest
            platform_id: macosx_x86_64

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.6.4

      - uses: ilammy/msvc-dev-cmd@v1
        if: startsWith(matrix.os, 'windows')

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: store artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-whl
          path: wheelhouse/*.whl

  build_sdist:
    name: build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: setup python
        with:
          python-version: '3.8'

      - name: install dependencies
        run: bash ci/install_sdist_dep.sh

      - name: build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [ build_wheels, build_sdist ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: release package
        if: (github.event_name == 'release' && github.event.action == 'created') || github.event_name == 'workflow_dispatch'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
